suite: Secrets
tests:
  - it: Creates the registry secret if password is set
    template: registry-secret.yaml
    set:
      imageCredentials:
        password: "frou-frou"
    asserts:
      - isKind:
          of: Secret
  - it: Doesn't create the registry secret if secretRef set
    template: registry-secret.yaml
    set:
      imageCredentials:
        secretRef: "frou-frou"
    asserts:
      - hasDocuments:
          count: 0
  - it: Fails if both password and reference defined
    template: registry-secret.yaml
    set:
      imageCredentials:
        secretRef: "some-reference"
        password: "blah"
    asserts:
      - failedTemplate: {}
  - it: Uses the reference name if it's passed
    templates:
      - collector/rbac.yaml
      - operator/rbac.yaml
      - dashboard/rbac.yaml
    set:
      imageCredentials:
        secretRef: "frou-frou"
    documentIndex: 0
    asserts:
      - matchRegex:
          path: imagePullSecrets[0].name
          pattern: "frou-frou"



      # - matchRegex:
      #     path: spec.template.spec.containers[0].image
      #     pattern: ^us-east4-docker\.pkg\.dev\/thoras-registry\/platform\/.*$
  # - it: Should have helm recommended labels
  #   template: monitor/deployment.yaml
  #   asserts:
  #     - equal:
  #         path: metadata.labels["app.kubernetes.io/name"]
  #         value: thoras
  #     - matchRegex:
  #         path: metadata.labels["helm.sh/chart"]
  #         pattern: ^thoras-\d\.\d\.\d$
  #     - equal:
  #         path: metadata.labels["app.kubernetes.io/managed-by"]
  #         value: Helm
  #     - equal:
  #         path: metadata.labels["app.kubernetes.io/instance"]
  #         value: RELEASE-NAME
