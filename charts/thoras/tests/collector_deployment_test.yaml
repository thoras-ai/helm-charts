suite: Collector
templates:
  - collector/deployment.yaml
tests:
  - it: Deployment name and images should be correct
    set:
      thorasVersion: TEST
    asserts:
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: metrics-collector
      - equal:
          path: spec.template.spec.containers[0].image
          value: us-east4-docker.pkg.dev/thoras-registry/platform/elasticsearch:8.17.4
      - equal:
          path: spec.template.spec.containers[?(@.name == 'timescaledb')].image
          value: us-east4-docker.pkg.dev/thoras-registry/platform/timescaledb:2.19.2-pg16
  - it: Default containers should match snapshots
    set:
      thorasVersion: dev
    asserts:
      - matchSnapshot:
          path: spec.template.spec.containers[0]
      - matchSnapshot:
          path: spec.template.spec.containers[?(@.name == 'thoras-collector')]
  - it: Should mount pvc when in persistence mode
    set:
      metricsCollector:
        persistence:
          enabled: true
    asserts:
      - equal:
          path: spec.template.spec.volumes
          value:
            - name: elastic-search-data
              persistentVolumeClaim:
                claimName: elastic-search-data
      - equal:
          path: spec.template.spec.containers[0].volumeMounts
          value:
            - mountPath: /var/lib/share/elasticsearch
              name: elastic-search-data
  - it: Should always create timescale container
    asserts:
      - contains:
          path: $..spec.containers
          content:
            name: timescaledb
          any: true

  ### Security context tests
  - it: Should use additional securityContext if specified
    set:
      metricsCollector:
        persistence:
          enabled: true
        additionalPvSecurityContext:
          additionalField: "additionalValue"
    asserts:
      - isSubset:
          path: spec.template.spec.containers[0,1].securityContext
          content:
            runAsUser: 1000
            runAsGroup: 0
            additionalField: "additionalValue"
      - isSubset:
          path: spec.template.spec.initContainers[0,1].securityContext
          content:
            additionalField: "additionalValue"
  - it: Should not use additional securityContext if not specified
    set:
      metricsCollector:
        persistence:
          enabled: true
    asserts:
      - isSubset:
          path: spec.template.spec.containers[0,1].securityContext
          content:
            runAsUser: 1000
            runAsGroup: 0
      - notExists:
          path: spec.template.spec.initContainers[*].securityContext
  - it: Should not have any securityContext if persistence is disabled
    asserts:
      - notExists:
          path: spec.template.spec.containers[*].securityContext
  - it: Should set tolerations if specified
    set:
      tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
  - it: Should not have tolerations if not specified
    asserts:
      - notExists:
          path: spec.template.spec.tolerations
