Default containers should match snapshots:
  1: |
    env:
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: thoras-timescale-password
    image: us-east4-docker.pkg.dev/thoras-registry/platform/timescaledb:2.21.3-pg16
    imagePullPolicy: IfNotPresent
    name: timescaledb
    ports:
      - containerPort: 5432
    resources:
      limits:
        memory: 8192Mi
      requests:
        cpu: 400m
        memory: 1280Mi
  2: |
    args:
      - |
        # wait for postgres to be available
        retries=0
        max_retries=48
        until [ $retries -ge $max_retries ]; do
          if pg_isready -h localhost ; then
            break
          else
            echo "postgres not ready"
            retries=$((retries+1))
            sleep 5
          fi
        done
        if [ $retries -ge $max_retries ]; then
          echo "Failed to connect to database after $max_retries retries"
          exit 1
        fi

        # try to create the "thoras" database if it doesn't exist
        if ! psql -U postgres -h localhost -tc "SELECT 1 FROM pg_database WHERE datname = 'thoras'" | grep -q 1; then
            echo "creating database 'thoras'"
            psql -U postgres -h localhost -c "CREATE DATABASE thoras"
        fi

        # ensure the postgres user has the correct password
        echo "setting password"
        psql -U postgres -h localhost -c "ALTER USER postgres WITH PASSWORD '${POSTGRES_PASSWORD}'";

        # run any migrations, accounting for upgrade/downgrade scenarios
        ./scripts/migrate_database.sh

        ./metrics-collector collect -c 60s
    command:
      - /bin/sh
      - -c
    env:
      - name: SERVICE_SLACK_WEBHOOK_URL
        valueFrom:
          secretKeyRef:
            key: webhookUrl
            name: thoras-slack
      - name: SERVICE_SLACK_ERRORS_ENABLED
        value: "false"
      - name: SERVICE_CLUSTER_NAME
        value: ""
      - name: SERVICE_LOG_LEVEL
        value: info
      - name: SERVICE_THORAS_API_BASE_URL
        value: http://thoras-api-server-v2
      - name: DATABASE_HOST
        valueFrom:
          secretKeyRef:
            key: host
            name: thoras-timescale-password
      - name: DATABASE_URL
        value: $(DATABASE_HOST)/thoras?sslmode=disable
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: thoras-timescale-password
      - name: SERVICE_COLLECTION_PARALLELIZATION
        value: "20"
      - name: SERVICE_THORAS_VERSION
        value: dev
      - name: SERVICE_CHART_VERSION
        value: 4.50.0
    image: us-east4-docker.pkg.dev/thoras-registry/platform/services:dev
    imagePullPolicy: IfNotPresent
    name: thoras-collector
    resources:
      limits:
        memory: 8192Mi
      requests:
        cpu: 200m
        memory: 32Mi
