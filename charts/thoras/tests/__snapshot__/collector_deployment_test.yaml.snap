Default containers should match snapshots:
  1: |
    env:
      - name: ES_JAVA_OPTS
        value: -Xms750m -Xmx750m
      - name: discovery.type
        value: single-node
      - name: xpack.security.enabled
        value: "true"
      - name: bootstrap.memory_lock
        value: "false"
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: thoras-elastic-password
    image: us-east4-docker.pkg.dev/thoras-registry/platform/elasticsearch:8.12.1
    imagePullPolicy: IfNotPresent
    name: elasticsearch
    ports:
      - containerPort: 9200
  2: |
    args:
      - |
        retries=0
        max_retries=48
        until [ $retries -eq $max_retries ]; do
          if wget --spider -T 5 -q ${ELASTICSEARCH_URL}; then
            echo "elasticsearch ready"
            break
          else
            echo "elasticsearch not ready"
            retries=$((retries+1))
            sleep 5
          fi
        done
        if [ $retries -eq $max_retries ]; then
            echo "fatal: giving up on elasticsearch availability"
            exit 1
        fi

        # try to create the "thoras" database if it doesn't exist
        psql ${DATABASE_HOST} -tc "SELECT 1 FROM pg_database WHERE datname = 'thoras'" | grep -q 1 || psql ${DATABASE_HOST} -c "CREATE DATABASE thoras"
        # run any migrations, accounting for upgrade/downgrade scenarios
        ./scripts/migrate_database.sh

        ./metrics-collector init
        ./metrics-collector collect -c 60
    command:
      - /bin/sh
      - -c
    env:
      - name: THORAS_NS
        valueFrom:
          fieldRef:
            fieldPath: metadata.namespace
      - name: ELASTICSEARCH_URL
        valueFrom:
          secretKeyRef:
            key: host
            name: thoras-elastic-password
      - name: SLACK_WEBHOOK_URL
        valueFrom:
          secretKeyRef:
            key: webhookUrl
            name: thoras-slack
      - name: SLACK_ERRORS_ENABLED
        value: "false"
      - name: LOGLEVEL
        value: info
      - name: API_BASE_URL
        value: http://thoras-api-server-v2
      - name: DATABASE_HOST
        valueFrom:
          secretKeyRef:
            key: host
            name: thoras-timescale-password
      - name: DATABASE_URL
        value: $(DATABASE_HOST)/thoras?sslmode=disable
    image: us-east4-docker.pkg.dev/thoras-registry/platform/services:dev
    imagePullPolicy: IfNotPresent
    name: thoras-collector
