suite: Monitor
templates:
  - monitor/deployment.yaml
  - monitor/configmap.yaml
set:
  thorasVersion: 1.0.0-alpha
  thorasMonitor:
    enabled: true
tests:
  - it: Deployment name and image registry should be correct
    template: monitor/deployment.yaml
    asserts:
      - isKind:
          of: Deployment
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^us-east4-docker\.pkg\.dev\/thoras-registry\/platform\/.*$
  - it: Should have the correct image tag
    template: monitor/deployment.yaml
    asserts:
      - matchRegex:
          path: spec.template.spec.containers[0].image
          pattern: ^.*:1\.0\.0-alpha$
  - it: Should have helm recommended labels
    template: monitor/deployment.yaml
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: thoras
      - matchRegex:
          path: metadata.labels["helm.sh/chart"]
          pattern: ^thoras-\d+\.\d+\.\d+$
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME
  - it: Should not create v2 monitor container when not enabled
    template: monitor/deployment.yaml
    asserts:
      - exists:
          path: $..spec.containers[?(@.name == 'thoras-monitor')]
      - notExists:
          path: $..spec.containers[?(@.name == 'thoras-monitor-v2')]
  - it: Should create v2 monitor container when enabled
    template: monitor/deployment.yaml
    set:
      thorasMonitorV2:
        enabled: true
    asserts:
      - exists:
          path: $..spec.containers[?(@.name == 'thoras-monitor')]
      - exists:
          path: $..spec.containers[?(@.name == 'thoras-monitor-v2')]
  - it: Should set tolerations if specified
    template: monitor/deployment.yaml
    set:
      tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
  - it: Should not have tolerations if not specified
    asserts:
      - notExists:
          path: spec.template.spec.tolerations
