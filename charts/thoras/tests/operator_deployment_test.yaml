suite: Operator
templates:
  - operator/deployment.yaml
tests:
  - it: Ensure MODEL_SKIP_CACHE not exists when reasoning is enabled
    set:
      thorasForecast:
        skipCache: true
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'MODEL_SKIP_CACHE')].value
          value: "true"
  - it: Has FORECAST_NODE_SELECTOR set when nodeSelector specified
    set:
      nodeSelector:
        color: green
        bestGame: sekiro
    asserts:
      - equal:
          path: .spec.template.spec.containers[0].env[?(@.name == 'FORECAST_NODE_SELECTOR')].value
          value: "bestGame:sekiro,color:green"
  - it: Should set tolerations if specified
    set:
      tolerations:
        - key: "example-key"
          operator: "Exists"
          effect: "NoSchedule"
    asserts:
      - contains:
          path: spec.template.spec.tolerations
          content:
            key: "example-key"
            operator: "Exists"
            effect: "NoSchedule"
      - equal:
          path: .spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_TOLERATIONS')].value
          value: '[{"effect":"NoSchedule","key":"example-key","operator":"Exists"}]'
  - it: Should not have tolerations if not specified
    asserts:
      - notExists:
          path: spec.template.spec.tolerations
      - equal:
          path: .spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_TOLERATIONS')].value
          value: "[]"
  ############################
  # Resource allocation
  ############################

  ### CPU
  # Requests
  - it: Ensure FORECAST_RESOURCE_REQUESTS_CPU is set
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_REQUESTS_CPU')].value
          value: "256m"
  - it: Ensure FORECAST_RESOURCE_REQUESTS_CPU overrides are honored
    set:
      thorasForecast:
        requests:
          cpu: "2"
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_REQUESTS_CPU')].value
          value: "2"
  # Limits
  - it: Ensure FORECAST_RESOURCE_LIMITS_CPU is set
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_LIMITS_CPU')].value
          value: "4"
  - it: Ensure FORECAST_RESOURCE_LIMITS_CPU overrides are honored
    set:
      thorasForecast:
        limits:
          cpu: "2"
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_LIMITS_CPU')].value
          value: "2"
  ### Memory
  # Requests
  - it: Ensure FORECAST_RESOURCE_REQUESTS_MEMORY is set
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_REQUESTS_MEMORY')].value
          value: "256Mi"
  - it: Ensure FORECAST_RESOURCE_REQUESTS_MEMORY overrides are honored
    set:
      thorasForecast:
        requests:
          memory: "4Gi"
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_REQUESTS_MEMORY')].value
          value: "4Gi"
  # Limits
  - it: Ensure FORECAST_RESOURCE_LIMITS_MEMORY is set
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_LIMITS_MEMORY')].value
          value: "8Gi"
  - it: Ensure FORECAST_RESOURCE_LIMITS_MEMORY overrides are honored
    set:
      thorasForecast:
        limits:
          memory: "2Gi"
    asserts:
      - equal:
          path: $.spec.template.spec.containers[0].env[?(@.name == 'SERVICE_FORECAST_RESOURCE_LIMITS_MEMORY')].value
          value: "2Gi"
