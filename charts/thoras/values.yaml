---

thorasVersion: "2.0.10"

imageCredentials:
  registry: "us-east4-docker.pkg.dev/thoras-registry/platform"
  username: "_json_key_base64"
  password: ""

resourceQuota:
  enabled: false
  pods: 200
  cronjobs: 200
  jobs: 200

imagePullPolicy: "IfNotPresent"

logLevel: info

thorasOperator:
  podAnnotations: {}
  limits:
    cpu: 1000m
    memory: 1000Mi
  requests:
    cpu: 100m
    memory: 100Mi

metricsCollector:
  persistence:
    enabled: false
    volumeName: ""
    storageClassName: "efs-sc-thoras"
    createEFSStorageClass:
      fileSystemId: ""
  podAnnotations: {}
  collector:
    name: thoras-collector
  search:
    imageTag: "8.12.1"
    name: elasticsearch
    containerPort: 9200
  purge:
    ttl: 30d
    schedule: "00 00 * * *"
  init:
    imageTag: "latest"

thorasApiServer:
  containerPort: 8443
  podAnnotations: {}
  limits:
    cpu: 1000m
    memory: 1000Mi
  requests:
    cpu: 100m
    memory: 100Mi
  port: 443
  logLevel: "debug"

thorasDashboard:
  enabled: true
  serviceAccount:
    name: thoras-dashboard
    create: true
  rbac:
    create: true
  podAnnotations: {}
  containerPort: 3000
  limits:
    cpu: 1000m
    memory: 1000Mi
  requests:
    cpu: 100m
    memory: 100Mi
  port: 80
  replicas: 3
  service:
    type: ClusterIP
    annotations: {}

thorasMonitor:
  enabled: false
  podAnnotations: {}
  slackWorkspaceID: ""
  slackChannelID: ""
  slackWebhookID: ""
  config: |

thorasForecast: {}
