---
{{- $ca := genCA "thoras-webhooks-ca" 3650 }}
{{- $cn := "thoras-webhooks" }}
{{- $dns1 := printf "%s.%s" $cn .Release.Namespace }}
{{- $dns2 := printf "%s.%s.svc" $cn .Release.Namespace }}
{{- $cert := genSignedCert $cn nil (list $dns1 $dns2) 3650 $ca }}
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: thoras-webhooks-cert
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels" . | nindent 4 }}
data:
  {{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "thoras-webhooks-cert") }}
  {{- $secretData := (get $secretObj "data") | default dict }}
  {{- $secretCert := (get $secretData "tls.crt") | default ($cert.Cert | b64enc) }}
  {{- $secretKey := (get $secretData "tls.key") | default ($cert.Key | b64enc) }}
  {{- $secretCaCert := (get $secretData "ca.crt") | default ($ca.Cert | b64enc) }}
  tls.crt: {{ $secretCert | quote }}
  tls.key: {{ $secretKey | quote }}
  ca.crt: {{ $secretCaCert | quote }}
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: "pods.thoras.ai"
webhooks:
- name: "pods.thoras.ai"
  rules:
  - apiGroups:   [""]
    apiVersions: ["v1"]
    operations:  ["CREATE"]
    resources:   ["pods"]
    scope:       "Namespaced"
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: thoras-webhooks
      path: /mutate--v1-pod
    caBundle: {{ $secretCaCert | quote }}
  sideEffects: None
  failurePolicy: 'Ignore'
  admissionReviewVersions:
    - v1
- name: "scale.thoras.ai"
  rules:
  - apiGroups:   ["*"]
    apiVersions: ["*"]
    operations:  ["UPDATE"]
    resources:   ["*/scale"]
    scope:       "Namespaced"
  clientConfig:
    service:
      namespace: {{ .Release.Namespace }}
      name: thoras-webhooks
      path: /mutate-autoscaling-v1-scale
    caBundle: {{ $secretCaCert | quote }}
  sideEffects: None
  failurePolicy: 'Ignore'
  admissionReviewVersions:
    - v1
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: "validation.thoras.ai"
webhooks:
  - name: "ast-validation.thoras.ai"
    rules:
    - apiGroups:   ["thoras.ai"]
      apiVersions: ["v1"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["aiscaletargets"]
      scope:       "Namespaced"
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: thoras-webhooks
        path: /validate-thoras-ai-v1-aiscaletarget
      caBundle: {{ $secretCaCert | quote }}
    sideEffects: None
    failurePolicy: 'Ignore'
    timeoutSeconds: 5
    admissionReviewVersions:
      - v1
  - name: "scale-validation.thoras.ai"
    rules:
    - apiGroups:   ["*"]
      apiVersions: ["*"]
      operations:  ["UPDATE"]
      resources:   ["*/scale"]
      scope:       "Namespaced"
    clientConfig:
      service:
        namespace: {{ .Release.Namespace }}
        name: thoras-webhooks
        path: /validate-autoscaling-v1-scale
      caBundle: {{ $secretCaCert | quote }}
    sideEffects: None
    failurePolicy: 'Ignore'
    timeoutSeconds: 5
    admissionReviewVersions:
      - v1
