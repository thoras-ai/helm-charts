---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "labels" . | nindent 4 }}
  name: thoras-operator
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.thorasOperator.replicas }}
  selector:
    matchLabels:
      app: thoras-operator
  template:
    metadata:
      labels:
        app: thoras-operator
        name: thoras-operator
        {{- include "labels" . | nindent 8 }}
        {{- with .Values.thorasOperator.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.thorasOperator.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.thorasOperator.prometheus.enabled }}
      {{- if not .Values.thorasOperator.podAnnotations }}
      annotations:
      {{- end }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: {{ .Values.thorasOperator.prometheus.port | quote}}
      {{- end }}
      name: thoras-operator
    spec:
      serviceAccountName: thoras-operator
      volumes:
        - name: tls
          secret:
            secretName: thoras-webhooks-cert
      containers:
      - image: {{ .Values.imageCredentials.registry }}/services:{{ default .Values.thorasVersion .Values.thorasOperator.imageTag }}
        name: thoras-operator
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        env:
          - name: "ES_HOST"
            valueFrom:
              secretKeyRef:
                name: thoras-elastic-password
                key: host
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
            {{- if and .Values.slackWebhookUrlSecretRefName .Values.slackWebhookUrlSecretRefKey }}
                name: {{ .Values.slackWebhookUrlSecretRefName }}
                key: {{ .Values.slackWebhookUrlSecretRefKey }}
            {{- else }}
                name: thoras-slack
                key: webhookUrl
            {{- end }}
          - name: "THORAS_VERSION"
            value: {{ .Chart.Version | replace "+" "_" }}
          - name: "SERVICE_FORECAST_RESOURCE_REQUESTS_CPU"
            value: {{ .Values.thorasForecast.requests.cpu | quote }}
          - name: "SERVICE_FORECAST_RESOURCE_LIMITS_CPU"
            value: {{ .Values.thorasForecast.limits.cpu | quote }}
          - name: "SERVICE_FORECAST_RESOURCE_REQUESTS_MEMORY"
            value: {{ .Values.thorasForecast.requests.memory | quote }}
          - name: "SERVICE_FORECAST_RESOURCE_LIMITS_MEMORY"
            value: {{ .Values.thorasForecast.limits.memory | quote }}
          - name: "MODEL_IMAGE"
            value: {{ .Values.imageCredentials.registry }}/thoras-forecast:{{ default .Values.thorasVersion .Values.thorasForecast.imageTag }}
          - name: THORAS_NS
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SERVICE_SLACK_ERRORS_ENABLED
            value: "{{ .Values.thorasOperator.slackErrorsEnabled | default .Values.slackErrorsEnabled }}"
          - name: SERVICE_SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
            {{- if and .Values.slackWebhookUrlSecretRefName .Values.slackWebhookUrlSecretRefKey }}
                name: {{ .Values.slackWebhookUrlSecretRefName }}
                key: {{ .Values.slackWebhookUrlSecretRefKey }}
            {{- else }}
                name: thoras-slack
                key: webhookUrl
            {{- end }}
          - name: SERVICE_LOG_LEVEL
            value: {{ default .Values.logLevel .Values.thorasOperator.logLevel }}
          - name: SERVICE_CLUSTER_NAME
            value: "{{ .Values.cluster.name }}"
          - name: SERVICE_THORAS_API_BASE_URL
            value: "http://thoras-api-server-v2"
          - name: SERVICE_REASONING_ENABLED
            value: "{{ .Values.thorasReasoning.enabled }}"
          - name: FORECAST_IMAGE_PULL_POLICY
            value: "{{ .Values.imagePullPolicy }}"
          - name: MODEL_SKIP_CACHE
            value: "{{ .Values.thorasForecast.skipCache }}"
          - name: SERVICE_QUERIES_PER_SECOND
            value: {{ .Values.thorasOperator.queriesPerSecond | default .Values.queriesPerSecond | quote }}
          {{- with .Values.nodeSelector }}
            {{- $result := list -}}
            {{- range $key, $value := . }}
              {{- $result = append $result (printf "%s:%s" $key $value) }}
            {{- end }}
            {{- $finalString := join "," $result }}
          - name: FORECAST_NODE_SELECTOR
            value: {{ $finalString }}
          {{- end }}
          - name: SERVICE_ENQUEUE_FORECASTS
            value: {{ .Values.thorasOperator.forecastQueue.enabled | quote }}
          - name: SERVICE_FORECAST_TOLERATIONS
            value: {{ .Values.tolerations | toJson | quote }}
          - name: SERVICE_PORT
            value: {{ .Values.thorasOperator.prometheus.port | quote }}
        command: [
          "/app/operator"
        ]
        volumeMounts:
          - name: tls
            mountPath: /tmp/k8s-webhook-server/serving-certs/tls.crt
            subPath: tls.crt
            readOnly: true
          - name: tls
            mountPath: /tmp/k8s-webhook-server/serving-certs/tls.key
            subPath: tls.key
            readOnly: true
        ports:
          - name: https-web-hooks
            containerPort: 9443
          - name: http-metrics
            containerPort: {{ .Values.thorasOperator.prometheus.port }}
        resources:
          limits:
            memory: {{ .Values.thorasOperator.limits.memory }}
          requests:
            cpu: {{ .Values.thorasOperator.requests.cpu }}
            memory: {{ .Values.thorasOperator.requests.memory }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
