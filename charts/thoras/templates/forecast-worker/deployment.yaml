---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thoras-forecast-worker
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "thoras.labels" . | nindent 4 }}
spec:
  replicas:  {{ .Values.thorasForecast.worker.replicas }}
  selector:
    matchLabels:
      app: thoras-forecast-worker
  template:
    metadata:
      labels:
        app: thoras-forecast-worker
        {{- include "thoras.labels" . | nindent 8 }}
        {{- with .Values.thorasForecast.worker.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.thorasForecast.worker.podAnnotations }}
      annotations:
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Values.thorasForecast.serviceAccount.name }}
      initContainers:
      - image: {{ .Values.imageCredentials.registry }}/services:{{ default .Values.thorasVersion .Values.thorasApiServerV2.imageTag }}
        name: wait-for-api-service
        env:
          - name: API_HEALTH_URL
            value: "http://thoras-api-server-v2/health"
        command: ["/bin/sh", "-c"]
        args:
          - |
            curl -s --fail-with-body --retry-all-errors --retry 48 --retry-delay 5 ${API_HEALTH_URL}
            if [ $? -ne 0 ]; then
              echo "Failed to connect to API service"
              exit 1
            fi
      containers:
      - image: {{ .Values.imageCredentials.registry }}/thoras-forecast:{{ default .Values.thorasVersion .Values.thorasForecast.imageTag }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        name: thoras-forecast-worker
        command: [
          "worker",
          "--polling_interval",
          "{{ .Values.thorasForecast.worker.pollingInterval }}"
        ]
        env:
          - name: "LOGLEVEL"
            value: {{ default .Values.logLevel .Values.thorasForecast.logLevel }}
          - name: API_BASE_URL
            value: "http://thoras-api-server-v2"
          - name: FORECAST_TIMEOUT
            value: "{{ default 600 .Values.thorasForecast.worker.forecastTimeout }}"
          - name: OMP_NUM_THREADS
            value: "1"
            {{- with .Values.thorasForecast.worker.retrainSteadyStateHours }}
          - name: RETRAIN_STEADY_STATE_HOURS
            value: {{ (max (float64 (printf "%v" .)) 1.0) | quote }}
            {{- end }}
            {{- with .Values.thorasForecast.worker.retrainOverrideHours }}
          - name: RETRAIN_OVERRIDE_HOURS
            value: {{ (float64 (printf "%v" .)) | quote }}
            {{- end }}
        resources:
          requests:
            cpu: {{ .Values.thorasForecast.worker.requests.cpu }}
            memory: {{ .Values.thorasForecast.worker.requests.memory }}
          limits:
            cpu: {{ .Values.thorasForecast.worker.limits.cpu }}
            memory: {{ .Values.thorasForecast.worker.limits.memory }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
