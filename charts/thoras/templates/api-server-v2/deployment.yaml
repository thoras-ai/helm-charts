---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thoras-api-server-v2
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 3
  selector:
    matchLabels:
      app: thoras-api-server-v2
  template:
    metadata:
      labels:
        app: thoras-api-server-v2
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.thorasApiServerV2.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: thoras-collector
      volumes:
        - name: tls
          secret:
            secretName: thoras-api-server-cert
      containers:
      - image: {{ .Values.imageCredentials.registry }}/services:{{ default .Values.thorasVersion .Values.thorasApiServerV2.imageTag }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        name: thoras-v2-api-server
        command: ["/app/api-server", "-p", {{ .Values.thorasApiServerV2.containerPort | quote }}]
        env:
          - name: "ELASTICSEARCH_URL"
            valueFrom:
              secretKeyRef:
                name: thoras-elastic-password
                key: host
          - name: SERVICE_SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
            {{- if and .Values.slackWebhookUrlSecretRefName .Values.slackWebhookUrlSecretRefKey }}
                name: {{ .Values.slackWebhookUrlSecretRefName }}
                key: {{ .Values.slackWebhookUrlSecretRefKey }}
            {{- else }}
                name: thoras-slack
                key: webhookUrl
            {{- end }}
          - name: SERVICE_REASONING_API_URL
            value: "http://thoras-reasoning-api.thoras.svc.cluster.local"
          - name: SERVICE_SLACK_ERRORS_ENABLED
            value: "{{ .Values.thorasApiServerV2.slackErrorsEnabled | default .Values.slackErrorsEnabled }}"
          - name: "SERVICE_LOGLEVEL"
            value: {{ default .Values.logLevel .Values.thorasApiServerV2.logLevel }}
        volumeMounts:
          - name: tls
            mountPath: /app/cert.pem
            subPath: tls.crt
            readOnly: true
          - name: tls
            mountPath: /app/key.pem
            subPath: tls.key
            readOnly: true
        ports:
        - containerPort: {{ .Values.thorasApiServerV2.containerPort }}
        resources:
          limits:
            memory: {{ .Values.thorasApiServerV2.limits.memory }}
          requests:
            cpu: {{ .Values.thorasApiServerV2.requests.cpu }}
            memory: {{ .Values.thorasApiServerV2.requests.memory }}
