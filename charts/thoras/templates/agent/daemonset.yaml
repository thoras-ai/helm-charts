{{- if .Values.thorasAgent.enabled }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: thoras-agent
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: thoras-agent
  template:
    metadata:
      labels:
        app: thoras-agent
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        {{- with .Values.thorasAgent.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.thorasAgent.containerPort | quote}}
      {{- with .Values.thorasAgent.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.thorasAgent.serviceAccount.name }}
      containers:
      - name: thoras-agent
        image: {{ .Values.imageCredentials.registry }}/services:{{ default .Values.thorasVersion .Values.thorasAgent.imageTag }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        command: ["/app/agent"]
        env:
          - name: "SERVICE_LOG_LEVEL"
            value: {{ default .Values.logLevel .Values.thorasAgent.logLevel }}
          - name: "SERVICE_FREQUENCY"
            value: {{ .Values.thorasAgent.frequency | quote }}
          - name: "SERVICE_PORT"
            value: {{ .Values.thorasAgent.containerPort | quote }}
          - name: SERVICE_SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
            {{- if and .Values.slackWebhookUrlSecretRefName .Values.slackWebhookUrlSecretRefKey }}
                name: {{ .Values.slackWebhookUrlSecretRefName }}
                key: {{ .Values.slackWebhookUrlSecretRefKey }}
            {{- else }}
                name: thoras-slack
                key: webhookUrl
            {{- end }}
          - name: SERVICE_SLACK_ERRORS_ENABLED
            value: "{{ .Values.thorasAgent.slackErrorsEnabled | default .Values.slackErrorsEnabled }}"
          - name: SERVICE_CLUSTER_NAME
            value: "{{ .Values.cluster.name }}"
          - name: SERVICE_QUERIES_PER_SECOND
            value: {{ .Values.thorasAgent.queriesPerSecond | default .Values.queriesPerSecond | quote }}
        ports:
          - containerPort: {{ .Values.thorasAgent.containerPort }}
        resources:
          limits:
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          # the agent requires elevated privileges to collect ebpf traces
          privileged: true
      # drawn from https://github.com/kubeservice-stack/kubservice-charts/blob/6be7b9fb081abd2255dc83854dbed2d7d11e0973/charts/kubeservice-ebpf-exporter/values.yaml#L67-L69
      tolerations:
        - effect: NoSchedule
          operator: Exists
      # it may be desirable to set a high priority class to ensure that a DaemonSet Pod
      # preempts running Pods
      # priorityClassName: important
      terminationGracePeriodSeconds: 30
      hostNetwork: true
{{- end }}
