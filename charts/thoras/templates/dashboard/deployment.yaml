---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thoras-dashboard
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "thoras.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.thorasDashboard.replicas }}
  selector:
    matchLabels:
      app: thoras-dashboard
  template:
    metadata:
      labels:
        app: thoras-dashboard
        {{- include "thoras.labels" . | nindent 8 }}
        {{- with .Values.thorasDashboard.labels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- if not .Values.thorasDashboard.unittesting }}
        checksum/configmap: {{ include (print $.Template.BasePath "/dashboard/nginx-config-map.yaml") . | sha256sum }}
        {{- end }}
      {{- with .Values.thorasDashboard.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.thorasDashboard.serviceAccount.name }}
      volumes:
        - name: nginx-config
          configMap:
            name: thoras-dashboard-nginx-config
      initContainers:
      - image: {{ .Values.imageCredentials.registry }}/services:{{ default .Values.thorasVersion .Values.thorasApiServerV2.imageTag }}
        name: wait-for-api-service
        env:
          - name: API_BASE_URL
            value: "http://thoras-api-server-v2.thoras.svc.cluster.local/health"
        command: ["/bin/sh", "-c"]
        args:
          - |
            curl -s --fail-with-body --retry-all-errors --retry 48 --retry-delay 5 ${API_BASE_URL}
            if [ $? -ne 0 ]; then
              echo "Failed to connect to API service"
              exit 1
            fi
      containers:
      - image: {{ .Values.imageCredentials.registry }}/thoras-dashboard-v2:{{ default .Values.thorasVersion .Values.thorasDashboard.v2.imageTag }}
        name: thoras-dashboard-v2
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        ports:
        - containerPort: {{ .Values.thorasDashboard.v2.containerPort }}
        resources:
          limits:
            memory: {{ .Values.thorasDashboard.limits.memory }}
          requests:
            cpu: {{ .Values.thorasDashboard.requests.cpu }}
            memory: {{ .Values.thorasDashboard.requests.memory }}
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: dashboard-v2.nginx.conf
      - name: thoras-api-proxy
        image: {{ .Values.imageCredentials.registry }}/nginx:{{ .Values.thorasDashboard.nginx.imageTag }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        ports:
        - containerPort: {{ .Values.thorasDashboard.nginxContainerPort }}
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
