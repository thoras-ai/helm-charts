{{- if .Values.thorasMonitor.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thoras-monitor
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: thoras-monitor
  template:
    metadata:
      labels:
        app: thoras-monitor
        app.kubernetes.io/name: {{ .Chart.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/configmap: {{ include (print $.Template.BasePath "/monitor/configmap.yaml") . | sha256sum }}
        {{- with .Values.thorasMonitor.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: thoras-operator
      volumes:
      - name: config
        configMap:
          name: thoras-monitor-config
      containers:
      - image: {{ .Values.imageCredentials.registry }}/thoras-monitor:{{ default .Values.thorasVersion .Values.thorasMonitor.imageTag }}
        imagePullPolicy: "{{ .Values.imagePullPolicy }}"
        name: thoras-monitor
        volumeMounts:
          - name: config
            mountPath: /apps/packages/thoras-monitor/config.yaml
            subPath: config.yaml
            readOnly: true
        command: ["/bin/sh", "-c"]
        args:
          - |
            # Don't start app until ES is available
            retries=0
            max_retries=48
            until [ $retries -eq $max_retries ]; do
              if curl -s --connect-timeout 5 --fail -XGET ${ES_HOST}; then
                echo "elasticsearch ready"
                break
              else
                echo "elasticsearch not ready"
                retries=$((retries+1))
                sleep 5
              fi
            done
            if [ $retries -eq $max_retries ]; then
                echo "fatal: giving up on elasticsearch availability"
                exit 1
            fi
            node index.js
        env:
          - name: "ES_HOST"
            valueFrom:
              secretKeyRef:
                name: thoras-elastic-password
                key: host
          - name: API_BASE_URL
            value: "http://thoras-api-server-v2"
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
            {{- if and .Values.slackWebhookUrlSecretRefName .Values.slackWebhookUrlSecretRefKey }}
                name: {{ .Values.slackWebhookUrlSecretRefName }}
                key: {{ .Values.slackWebhookUrlSecretRefKey }}
            {{- else }}
                name: thoras-slack
                key: webhookUrl
            {{- end }}
          - name: SLACK_ERRORS_ENABLED
            value: "{{ .Values.thorasMonitor.slackErrorsEnabled | default .Values.slackErrorsEnabled }}"
          - name: "LOGLEVEL"
            value: {{ default .Values.logLevel .Values.thorasMonitor.logLevel }}
{{- end }}
